<?xml version="1.0"?>
<doc>
    <assembly>
        <name>server</name>
    </assembly>
    <members>
        <member name="T:server.Controllers.ApiController">
            <summary>
            Controller with the prefixed route 'API/[controller]'
            </summary>
        </member>
        <member name="M:server.Controllers.API.AdminController.RemoveUser(System.String)">
            <summary>
            Remove a user
            </summary>
            <returns></returns>
        </member>
        <member name="M:server.Controllers.API.AuthController.Test">
            <summary>
            Test User Authentication
            </summary>
            <returns></returns>
        </member>
        <member name="M:server.Controllers.CrudController`1.GetList(server.Helpers.ResourceParameters)">
            <summary>
            Get list of Entity
            </summary>
            <param name="resource"></param>
            <returns>PagedList</returns>
        </member>
        <member name="M:server.API.Controllers.DebugController.Error">
            <summary>
            Test Global exception handler
            </summary>
            <returns></returns>
        </member>
        <member name="M:server.API.Controllers.DebugController.ListTables">
            <summary>
            Test items
            </summary>
            <returns></returns>
        </member>
        <member name="M:server.API.Controllers.FruitsController.Test(server.Helpers.ResourceParameters)">
            <summary>
            Testing Extension to API Routes
            </summary>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:server.Data.DataContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            enable data enctyption at rest for properties with [Encrypted] Attribute
            </summary>
        </member>
        <member name="M:server.Data.DataSeeder.InitializeData(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            runs database migrations on startup
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:server.Data.IRepository`1.FindByIdAsync(System.Guid)">
            <summary>
            Find a single Entity, does not track
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:server.Data.IRepository`1.GetByIdAsync(System.Guid)">
            <summary>
            Get a single Entity
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:server.Data.IRepository`1.ListAsync(server.Helpers.ResourceParameters)">
            <summary>
            Get a list of Entities
            </summary>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:server.Data.IRepository`1.PagedListAsync(server.Helpers.ResourceParameters)">
            <summary>
            Get a Paged list of Entities
            </summary>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:server.Data.IRepository`1.AddAsync(`0)">
            <summary>
            Add an Entity
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:server.Data.IRepository`1.UpdateAsync(`0)">
            <summary>
            Update an Entity
            </summary>
            <param name="entity">The Entity</param>
            <returns></returns>
        </member>
        <member name="M:server.Data.IRepository`1.UpdateAsync(System.Guid,`0)">
            <summary>
            Update an Entity
            </summary>
            <param name="id">The Entity GUID</param>
            <param name="entity">The Entity(minus the GUID)</param>
            <returns></returns>
        </member>
        <member name="M:server.Data.IRepository`1.DeleteAsync(`0)">
            <summary>
            Delete an Entity given the object
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:server.Data.IRepository`1.DeleteAsync(System.Guid)">
            <summary>
            Delete an Entity given the GUID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:server.Helpers.JwtBearer.AddJwtAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure default JWT Authentication Options
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:server.Interfaces.ITokenService.GenerateToken(server.Identity.User)">
            <summary>
            Generate JWT Response Object
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="P:server.Models.Objects.Contact.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
            <value>
            The organization.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.Street">
            <summary>
            Gets or sets the street.
            </summary>
            <value>
            The street.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.City">
            <summary>
            Gets or sets the city.
            </summary>
            <value>
            The city.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.PostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
            <value>
            The postal code.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.Country">
            <summary>
            Gets or sets the country.
            </summary>
            <value>
            The country.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
            <value>
            The phone number.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.PhoneNumberExt">
            <summary>
            Gets or sets the phone number ext.
            </summary>
            <value>
            The phone number ext.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.FaxNumber">
            <summary>
            Gets or sets the fax number.
            </summary>
            <value>
            The fax number.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.FaxNumberExt">
            <summary>
            Gets or sets the fax number ext.
            </summary>
            <value>
            The fax number ext.
            </value>
        </member>
        <member name="P:server.Models.Objects.Contact.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="M:server.Models.Objects.WhoisRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:server.Models.Objects.WhoisRecord"/> class.
            </summary>
        </member>
        <member name="M:server.Models.Objects.WhoisRecord.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:server.Models.Objects.WhoisRecord"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:server.Models.Objects.WhoisRecord.Raw">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:server.Models.Objects.WhoisRecord.Domain">
            <summary>
            Gets or sets the domain.
            </summary>
            <value>The domain.</value>
        </member>
        <member name="P:server.Models.Objects.WhoisRecord.Server">
            <summary>
            Gets or sets the server.
            </summary>
            <value>The server.</value>
        </member>
        <member name="P:server.Models.Objects.WhoisRecord.Created">
            <summary>
            Gets or sets the date the domain was created.
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:server.Models.Objects.WhoisRecord.Expired">
            <summary>
            Gets or sets the date the domain will expire.
            </summary>
            <value>Expiration Date</value>
        </member>
        <member name="P:server.Models.Objects.WhoisRecord.Registrant">
            <summary>
            Gets or sets the registrant.
            </summary>
            <value>
            The registrant.
            </value>
        </member>
        <member name="P:server.Models.Objects.WhoisRecord.Technical">
            <summary>
            Gets or sets the technical contact.
            </summary>
            <value>
            The technical contact.
            </value>
        </member>
        <member name="P:server.Models.Objects.WhoisRecord.Admin">
            <summary>
            Gets or sets the admin contact.
            </summary>
            <value>
            The admin contact.
            </value>
        </member>
        <member name="P:server.Models.Objects.WhoisRecord.DomainStatus">
            <summary>
            Gets or sets the Domain statuses.
            </summary>
            <value>
            The ICANN EPP statuses.
            </value>
        </member>
        <member name="M:server.Models.Objects.WhoisRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
    </members>
</doc>
