// test eslint file for typescript/eslint combo
// https://github.com/typescript-eslint/typescript-eslint

{
  "env": {
    "browser": true,
    "node": true,
    "jest": true
  },

  "parser": "@typescript-eslint/parser",

  "extends": [
    "airbnb",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "prettier/@typescript-eslint"
  ],
  "plugins": ["@typescript-eslint", "react-hooks"],

  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies

    //opinion rule, no need to restrict syntax that works
    "no-restricted-syntax": "off",

    //typescript already checks for this
    "no-undef": "off",
    "react/jsx-no-undef": "off",

    // turn off alert untill custom alert component
    "no-alert": "off",

    // disallow event global variable
    "no-restricted-globals": ["error", "event", "fdescribe"],

    //depreciated
    "jsx-a11y/label-has-for": "off",

    //typescript already handles path resolution
    "import/no-unresolved": "off",

    "import/no-extraneous-dependencies": "off",

    // disabled, all types auto-fix to interface. rule would be redundant.
    "@typescript-eslint/interface-name-prefix": "off",

    // established coding standards use a different naming convention
    "@typescript-eslint/camelcase": "off",

    //turning off untill refactoring
    "react/no-array-index-key": "off",

    //permit JSX in tsx files
    "react/jsx-filename-extension": [1, { "extensions": ["tsx"] }],

    //removes prop-types requirement because Typescript
    "react/prop-types": "off",

    //destructuring props is not required
    "react/destructuring-assignment": "off",

    // why is this needed?
    "react/button-has-type": "off",

    //conflicts with prettier formatting (print limit)
    "react/jsx-one-expression-per-line": "off",

    // not needed for certail React Functions
    "@typescript-eslint/explicit-function-return-type": "off",

    // modified, removes code-bloat accessors in TS React.
    "@typescript-eslint/explicit-member-accessibility": "off",

    //allowing any keyword for simple types
    "@typescript-eslint/no-explicit-any": "off"
  }
}
